#!/usr/bin/env ruby


require 'tta_terms_api'
html = File.expand_path '~/.tta_terms/tta_terms.html'

def present?(string)
  not (string.nil? || string.empty?)
end
begin
  search = ARGV.first.downcase
  words_criteria = TtaTermsApi.list search: search
  words = words_criteria.map(&:to_word)
  File.open(html, "w:utf-8") do |f|
    f.puts '<html><head><meta charset="utf-8"></head><body>'
    words.each do |word|
      f.puts "<h1>#{word.name}</h1>" unless word.name.downcase == search
      f.puts "<h1>#{word.origin}</h1>" unless word.origin.downcase == search
      f.puts "<abbr>#{word.type}</abbr>" if present?(word.type)
      f.puts "<i>#{word.similar}</i>" if present?(word.similar)
      f.puts "<p>#{word.description}</p>" if present?(word.description)
    end
    f.puts "</body></html>"
  end
# rescue
#   File.open(html, "w:utf-8") do |f|
#     f.puts '<html><head><meta charset="utf-8"></head><body>'
#     f.puts "<h1>Not found</h1>"
#     f.puts "</body></html>"
#   end
end
